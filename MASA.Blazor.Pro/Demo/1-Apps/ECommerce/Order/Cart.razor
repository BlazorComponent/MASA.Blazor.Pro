<MRow class="mt-2">
    <MCol Md="8">
        <MRow class="mt-0 pl-2">
            @foreach (var item in _basketItems)
            {
                <MCol Md="12" class="mb-5">
                    <MHover>
                        <MCard Height="240" @attributes="context.Attrs" Class="@($"{context.Class} {(context.Hover ? "on-hover" : "")}")" Elevation="@(context.Hover ? 12 : 2)">
                            <MRow>
                                <MCol Md="3" Align="AlignTypes.Center" class="pa-6 d-flex flex-column align-center">
                                    <img src="@item.GetPictureUrl()" style="width:200px;" />
                                </MCol>
                                <MCol Md="6" Align="AlignTypes.Center">
                                    <h4 class="mb-0 font-weight-medium">@item.Name</h4>
                                    <p>
                                        <span class="font-weight-medium">By</span> <span class="deep-purple--text text--accent-1  ml-1">@item.Company</span>
                                    </p>
                                    <MRating class="ml-n2 mt-n2" Value="item.Score" Readonly BackgroundColor="orange lighten-3" Color="orange" Small></MRating>
                                    <span class="green--text">InStock</span>
                                    <MRow Dense>
                                        <MCol Md="@("auto")" Class="mt-2">Qty: </MCol>
                                        <MCol Md="@("auto")"><MTextField Label="Qty" Solo Dense Value="@item.Qty"></MTextField></MCol>
                                    </MRow>
                                    <span class="blue-grey--text text--lighten-4">
                                        @item.Delivery
                                    </span>
                                    <div class="green--text">
                                        @item.Offers
                                    </div>
                                </MCol>
                                <MDivider Vertical />
                                <MCol Md="3" Align="AlignTypes.Center" Class="pa-6 d-flex flex-column align-center">
                                    <h4 class="deep-purple--text text--accent-1 mb-0 font-weight-bold">@item.GetFormatPrice()</h4>
                                    @if (item.FreeShipping)
                                    {
                                        <p class="mt-2" style="line-height: 1.5rem;">
                                            <span class="pa-1 mt-1 green lighten-5 green--text rounded-pill" style="font-size: 85%;">
                                                FreeShip
                                            </span>
                                        </p>
                                    }
                                    <MButton Block Depressed class="mt-3 text-capitalize" OnClick="()=>RemoveItem(item.Id)">
                                        <MIcon Left>mdi-close</MIcon>
                                        Remove
                                    </MButton>
                                    <MButton Block Depressed class="primary mt-3 text-capitalize">
                                        <MIcon Left>mdi-heart-outline</MIcon>
                                        Wishlist
                                    </MButton>
                                </MCol>
                            </MRow>
                        </MCard>
                    </MHover>
                </MCol>
            }
        </MRow>
    </MCol>
    <MCol Md="4">
        <MCard>
            <MSubheader>Options</MSubheader>
            <MCardText class="pb-0">
                <MTextField TValue="string" class="coupons" Dense Label="Coupons">
                    <AppendContent>
                        <span class="cursor-pointer">Apply</span>
                    </AppendContent>
                </MTextField>
                <MDivider></MDivider>
                <MListItem>
                    <MListItemTitle class="title">
                        Price Details
                    </MListItemTitle>
                </MListItem>
                <MList Dense>
                    <MListItem>
                        <MListItemTitle>TotalMRP</MListItemTitle>
                        <MListItemTitle class="text-right"> $598 </MListItemTitle>
                    </MListItem>
                    <MListItem>
                        <MListItemTitle>Discount</MListItemTitle>
                        <MListItemTitle class="text-right"> -25$ </MListItemTitle>
                    </MListItem>
                    <MListItem>
                        <MListItemTitle>EstimatedTax</MListItemTitle>
                        <MListItemTitle class="text-right"> $1.3 </MListItemTitle>
                    </MListItem>
                    <MListItem>
                        <MListItemTitle>EMI Eligibility</MListItemTitle>
                        <MListItemTitle class="text-right"> Details</MListItemTitle>
                    </MListItem>
                    <MListItem>
                        <MListItemTitle>DeliveryCharges</MListItemTitle>
                        <MListItemTitle class="text-right"> Free </MListItemTitle>
                    </MListItem>
                </MList>
                <MDivider></MDivider>
                <MListItem>
                    <MListItemTitle class="title"> Total</MListItemTitle>
                    <MListItemTitle class="text-right title">$574</MListItemTitle>
                </MListItem>
            </MCardText>
            <MCardActions>
                <MButton Block class="primary text-capitalize" OnClick="()=>{ StepChanged.InvokeAsync(1);DisabledChanged.InvokeAsync(false); }">
                    Place Order
                </MButton>
            </MCardActions>
        </MCard>
    </MCol>
</MRow>

@code {
    List<BasketItem> _basketItems = BasketService.GetUserBasket().Items;

    [Parameter]
    public StringNumber Step { get; set; } = default!;
    [Parameter]
    public EventCallback<StringNumber> StepChanged { get; set; }
    [Parameter]
    public bool Disabled { get; set; }
    [Parameter]
    public EventCallback<bool> DisabledChanged { get; set; }

    private void RemoveItem(int id)
    {
        _basketItems.Remove(_basketItems.Single(a => a.Id == id));
    }
}