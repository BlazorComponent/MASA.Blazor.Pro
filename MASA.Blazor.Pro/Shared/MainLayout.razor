@using Microsoft.AspNetCore.Components.Rendering
@inherits LayoutComponentBase
@inject GlobalConfigs GlobalConfig;
@inject I18n LanguageProvider

<MApp Dark="GlobalConfig.IsDark">
    <MAppBar Elevation=0 App MaxHeight=60 Class="mx-6">
        <MToolbar Elevation=0 Class="rounded-b-4">
            <Favorite />
            <MSpacer />
            <Search />
            <MIcon Size=20 Class="ml-5" Color="neutral-lighten-3">mdi-message-processing</MIcon>
            <MIcon Size=20 Class="ml-10" Color="neutral-lighten-3">mdi-cart-outline</MIcon>  
            <Language Onchange="()=>{}" />
            <Login />
        </MToolbar>
    </MAppBar> 

    <MNavigationDrawer Width=300 MiniVariantWidth=80 Fixed ExpandOnHover="GlobalConfig.ExpandOnHover" @bind-MiniVariant="GlobalConfig.NavigationMini" App>          
        <Navigation IsMini="GlobalConfig.NavigationMini" />
    </MNavigationDrawer> 

     <MButton Small Fab Color="primary" Style="@($"bottom:58px;z-index:7;position: fixed;{(GlobalConfig.NavigationMini ? "left:60px;" : "left:280px;")}")" OnClick="()=>{GlobalConfig.ExpandOnHover=!GlobalConfig.ExpandOnHover;}">
        <MIcon Class="white--text">
            @(GlobalConfig.NavigationMini?"mdi-chevron-right":"mdi-chevron-left")
        </MIcon>
    </MButton>

    <MMain Class="fill-lighten-1" Style="padding-top:60px">
        <div class="pa-6 max-width">
            <Breadcrumb @key="@Guid.NewGuid().ToString()"></Breadcrumb>
            @Body
        </div>
    </MMain>
</MApp>


@code {
    protected override void OnInitialized()
    {
        if (GlobalConfig.Language is not null)
        {
            LanguageProvider.SetLang(GlobalConfig.Language);
        }
    }
}